// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kaznasho/yarmarok/service (interfaces: ContributorService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	service "github.com/kaznasho/yarmarok/service"
)

// MockContributorService is a mock of ContributorService interface.
type MockContributorService struct {
	ctrl     *gomock.Controller
	recorder *MockContributorServiceMockRecorder
}

// MockContributorServiceMockRecorder is the mock recorder for MockContributorService.
type MockContributorServiceMockRecorder struct {
	mock *MockContributorService
}

// NewMockContributorService creates a new mock instance.
func NewMockContributorService(ctrl *gomock.Controller) *MockContributorService {
	mock := &MockContributorService{ctrl: ctrl}
	mock.recorder = &MockContributorServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContributorService) EXPECT() *MockContributorServiceMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockContributorService) Add(arg0 *service.ContributorAddRequest) (*service.InitResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0)
	ret0, _ := ret[0].(*service.InitResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add.
func (mr *MockContributorServiceMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockContributorService)(nil).Add), arg0)
}

// Edit mocks base method.
func (m *MockContributorService) Edit(arg0 *service.ContributorEditRequest) (*service.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Edit", arg0)
	ret0, _ := ret[0].(*service.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Edit indicates an expected call of Edit.
func (mr *MockContributorServiceMockRecorder) Edit(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Edit", reflect.TypeOf((*MockContributorService)(nil).Edit), arg0)
}

// List mocks base method.
func (m *MockContributorService) List() (*service.ContributorListResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].(*service.ContributorListResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockContributorServiceMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockContributorService)(nil).List))
}
