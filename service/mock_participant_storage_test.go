// Code generated by MockGen. DO NOT EDIT.
// Source:  github.com/bluegophercult/yarmarok/service (interfaces: ParticipantStorage)
//
// Generated by this command:
//
//	mockgen -destination=mock_participant_storage_test.go -package=service  github.com/bluegophercult/yarmarok/service ParticipantStorage
//
// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockParticipantStorage is a mock of ParticipantStorage interface.
type MockParticipantStorage struct {
	ctrl     *gomock.Controller
	recorder *MockParticipantStorageMockRecorder
}

// MockParticipantStorageMockRecorder is the mock recorder for MockParticipantStorage.
type MockParticipantStorageMockRecorder struct {
	mock *MockParticipantStorage
}

// NewMockParticipantStorage creates a new mock instance.
func NewMockParticipantStorage(ctrl *gomock.Controller) *MockParticipantStorage {
	mock := &MockParticipantStorage{ctrl: ctrl}
	mock.recorder = &MockParticipantStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockParticipantStorage) EXPECT() *MockParticipantStorageMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockParticipantStorage) Create(arg0 *Participant) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockParticipantStorageMockRecorder) Create(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockParticipantStorage)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockParticipantStorage) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockParticipantStorageMockRecorder) Delete(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockParticipantStorage)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockParticipantStorage) Get(arg0 string) (*Participant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*Participant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockParticipantStorageMockRecorder) Get(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockParticipantStorage)(nil).Get), arg0)
}

// GetAll mocks base method.
func (m *MockParticipantStorage) GetAll() ([]Participant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]Participant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockParticipantStorageMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockParticipantStorage)(nil).GetAll))
}

// Update mocks base method.
func (m *MockParticipantStorage) Update(arg0 *Participant) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockParticipantStorageMockRecorder) Update(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockParticipantStorage)(nil).Update), arg0)
}
