// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kaznasho/yarmarok/service (interfaces: ContributorStorage)

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockContributorStorage is a mock of ContributorStorage interface.
type MockContributorStorage struct {
	ctrl     *gomock.Controller
	recorder *MockContributorStorageMockRecorder
}

// MockContributorStorageMockRecorder is the mock recorder for MockContributorStorage.
type MockContributorStorageMockRecorder struct {
	mock *MockContributorStorage
}

// NewMockContributorStorage creates a new mock instance.
func NewMockContributorStorage(ctrl *gomock.Controller) *MockContributorStorage {
	mock := &MockContributorStorage{ctrl: ctrl}
	mock.recorder = &MockContributorStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContributorStorage) EXPECT() *MockContributorStorageMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockContributorStorage) Create(arg0 *Contributor) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockContributorStorageMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockContributorStorage)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockContributorStorage) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockContributorStorageMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockContributorStorage)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockContributorStorage) Get(arg0 string) (*Contributor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*Contributor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockContributorStorageMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockContributorStorage)(nil).Get), arg0)
}

// GetAll mocks base method.
func (m *MockContributorStorage) GetAll() ([]Contributor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]Contributor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockContributorStorageMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockContributorStorage)(nil).GetAll))
}

// Update mocks base method.
func (m *MockContributorStorage) Update(arg0 *Contributor) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockContributorStorageMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockContributorStorage)(nil).Update), arg0)
}
