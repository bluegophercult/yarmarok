// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kaznasho/yarmarok/service (interfaces: YarmarokStorage)

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockYarmarokStorage is a mock of YarmarokStorage interface.
type MockYarmarokStorage struct {
	ctrl     *gomock.Controller
	recorder *MockYarmarokStorageMockRecorder
}

// MockYarmarokStorageMockRecorder is the mock recorder for MockYarmarokStorage.
type MockYarmarokStorageMockRecorder struct {
	mock *MockYarmarokStorage
}

// NewMockYarmarokStorage creates a new mock instance.
func NewMockYarmarokStorage(ctrl *gomock.Controller) *MockYarmarokStorage {
	mock := &MockYarmarokStorage{ctrl: ctrl}
	mock.recorder = &MockYarmarokStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockYarmarokStorage) EXPECT() *MockYarmarokStorageMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockYarmarokStorage) Create(arg0 *Yarmarok) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockYarmarokStorageMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockYarmarokStorage)(nil).Create), arg0)
}

// Get mocks base method.
func (m *MockYarmarokStorage) Get(arg0 string) (*Yarmarok, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*Yarmarok)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockYarmarokStorageMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockYarmarokStorage)(nil).Get), arg0)
}

// GetAll mocks base method.
func (m *MockYarmarokStorage) GetAll() ([]Yarmarok, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]Yarmarok)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockYarmarokStorageMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockYarmarokStorage)(nil).GetAll))
}

// ParticipantStorage mocks base method.
func (m *MockYarmarokStorage) ParticipantStorage(arg0 string) ParticipantStorage {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParticipantStorage", arg0)
	ret0, _ := ret[0].(ParticipantStorage)
	return ret0
}

// ParticipantStorage indicates an expected call of ParticipantStorage.
func (mr *MockYarmarokStorageMockRecorder) ParticipantStorage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParticipantStorage", reflect.TypeOf((*MockYarmarokStorage)(nil).ParticipantStorage), arg0)
}
